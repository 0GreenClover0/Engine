# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  IS_CI: True

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:    
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Copy and compress build files
      run: |
       mkdir ${{github.workspace}}/result
       xcopy /s "${{github.workspace}}\build\src\Release\" "${{github.workspace}}\result\"
       xcopy /s "${{github.workspace}}\build\src\res\" "${{github.workspace}}\result\res\"
       xcopy /s "${{github.workspace}}\build\thirdparty\Release\" "${{github.workspace}}\result\"
       xcopy /s "${{github.workspace}}\build\_deps\glm-build\glm\Release\glm.lib" "${{github.workspace}}\result\"
       xcopy /s "${{github.workspace}}\build\_deps\yaml-cpp-build\Release\yaml-cpp.lib" "${{github.workspace}}\result\"
       xcopy /s "${{github.workspace}}\build\_deps\assimp-build\lib\Release\assimp-vc143-mt.lib" "${{github.workspace}}\result\"
       xcopy /s "${{github.workspace}}\build\_deps\glfw-build\src\Release\glfw3.lib" "${{github.workspace}}\result\"
       xcopy /s "${{github.workspace}}\build\_deps\assimp-build\contrib\zlib\Release\zlibstatic.lib" "${{github.workspace}}\result\"
       xcopy /s "${{github.workspace}}\.editor\" "${{github.workspace}}\result\"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: Engine
        path: ${{github.workspace}}/result/

      
